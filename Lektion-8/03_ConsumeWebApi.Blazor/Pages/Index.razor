@page "/"

<PageTitle>Index</PageTitle>
<div>
    <EditForm Model=viewModel OnSubmit=OnSubmitAsync>
        <div class="mb-3">
            <InputText @bind-Value=viewModel.Name placeholder="Produktens namn" class="form-control" />
        </div>
        <div class="mb-3">
            <InputText @bind-Value=viewModel.Description placeholder="Produktens beskrivning" class="form-control" />
        </div>
        <div class="mb-3">
            <InputText @bind-Value=viewModel.Price placeholder="Produktens pris" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Skapa</button>
    </EditForm>
</div>

<div class="mt-3">
@if(products != null)
{
    foreach(var p in products)
    {
        <div class="mb-3">
            <div><strong>@p.Name</strong></div>
            <div class="text-muted">@p.Description</div>
        </div>
    }
}
</div>

@code {
    private IEnumerable<ProductModel> products = new List<ProductModel>();
    private ProductViewModel viewModel = new ProductViewModel();

    private async Task OnSubmitAsync()
    {
        //var apikey = {Environment.GetEnvironmentVariable("ApiKey");
        await Http.PostAsJsonAsync($"https://localhost:7189/api/products?key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9", new ProductModel(viewModel.Name, viewModel.Description, decimal.Parse(viewModel.Price)));
        viewModel = new();
        await GetProductsAsync();
    }

    private async Task GetProductsAsync()
    {
        //var apikey = {Environment.GetEnvironmentVariable("ApiKey");
        products = await Http.GetFromJsonAsync<IEnumerable<ProductModel>>("https://localhost:7189/api/products?key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9");
    }

    protected override async Task OnInitializedAsync()
    {
        await GetProductsAsync();
    }
}

